// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class EtherLocked extends ethereum.Event {
  get params(): EtherLocked__Params {
    return new EtherLocked__Params(this);
  }
}

export class EtherLocked__Params {
  _event: EtherLocked;

  constructor(event: EtherLocked) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get releaseTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lockType(): number {
    return this._event.parameters[5].value.toI32();
  }
}

export class EtherUnlocked extends ethereum.Event {
  get params(): EtherUnlocked__Params {
    return new EtherUnlocked__Params(this);
  }
}

export class EtherUnlocked__Params {
  _event: EtherUnlocked;

  constructor(event: EtherUnlocked) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LockupExtended extends ethereum.Event {
  get params(): LockupExtended__Params {
    return new LockupExtended__Params(this);
  }
}

export class LockupExtended__Params {
  _event: LockupExtended;

  constructor(event: LockupExtended) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get releaseTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EtherLockup__getAllLockUpsResultValue0Struct extends ethereum.Tuple {
  get lockId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get releaseTime(): BigInt {
    return this[3].toBigInt();
  }

  get locked(): boolean {
    return this[4].toBoolean();
  }

  get lockType(): number {
    return this[5].toI32();
  }
}

export class EtherLockup__getLockupDetailsByIdResultValue0Struct extends ethereum.Tuple {
  get lockId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get releaseTime(): BigInt {
    return this[3].toBigInt();
  }

  get locked(): boolean {
    return this[4].toBoolean();
  }

  get lockType(): number {
    return this[5].toI32();
  }
}

export class EtherLockup__lockupsResult {
  value0: BigInt;
  value1: string;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: number;

  constructor(
    value0: BigInt,
    value1: string,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: number,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5)),
    );
    return map;
  }

  getLockId(): BigInt {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }

  getReleaseTime(): BigInt {
    return this.value3;
  }

  getLocked(): boolean {
    return this.value4;
  }

  getLockType(): number {
    return this.value5;
  }
}

export class EtherLockup extends ethereum.SmartContract {
  static bind(address: Address): EtherLockup {
    return new EtherLockup("EtherLockup", address);
  }

  emergencyUnlockTimestamp(): BigInt {
    let result = super.call(
      "emergencyUnlockTimestamp",
      "emergencyUnlockTimestamp():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_emergencyUnlockTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "emergencyUnlockTimestamp",
      "emergencyUnlockTimestamp():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllLockUps(): Array<EtherLockup__getAllLockUpsResultValue0Struct> {
    let result = super.call(
      "getAllLockUps",
      "getAllLockUps():((uint256,string,uint256,uint256,bool,uint8)[])",
      [],
    );

    return result[0].toTupleArray<EtherLockup__getAllLockUpsResultValue0Struct>();
  }

  try_getAllLockUps(): ethereum.CallResult<
    Array<EtherLockup__getAllLockUpsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllLockUps",
      "getAllLockUps():((uint256,string,uint256,uint256,bool,uint8)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<EtherLockup__getAllLockUpsResultValue0Struct>(),
    );
  }

  getLockupDetailsById(
    _lockId: BigInt,
  ): EtherLockup__getLockupDetailsByIdResultValue0Struct {
    let result = super.call(
      "getLockupDetailsById",
      "getLockupDetailsById(uint256):((uint256,string,uint256,uint256,bool,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_lockId)],
    );

    return changetype<EtherLockup__getLockupDetailsByIdResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getLockupDetailsById(
    _lockId: BigInt,
  ): ethereum.CallResult<EtherLockup__getLockupDetailsByIdResultValue0Struct> {
    let result = super.tryCall(
      "getLockupDetailsById",
      "getLockupDetailsById(uint256):((uint256,string,uint256,uint256,bool,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_lockId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EtherLockup__getLockupDetailsByIdResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  lockups(param0: BigInt): EtherLockup__lockupsResult {
    let result = super.call(
      "lockups",
      "lockups(uint256):(uint256,string,uint256,uint256,bool,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new EtherLockup__lockupsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toI32(),
    );
  }

  try_lockups(param0: BigInt): ethereum.CallResult<EtherLockup__lockupsResult> {
    let result = super.tryCall(
      "lockups",
      "lockups(uint256):(uint256,string,uint256,uint256,bool,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EtherLockup__lockupsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toI32(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class ExtendLockupCall extends ethereum.Call {
  get inputs(): ExtendLockupCall__Inputs {
    return new ExtendLockupCall__Inputs(this);
  }

  get outputs(): ExtendLockupCall__Outputs {
    return new ExtendLockupCall__Outputs(this);
  }
}

export class ExtendLockupCall__Inputs {
  _call: ExtendLockupCall;

  constructor(call: ExtendLockupCall) {
    this._call = call;
  }

  get _additionalMonths(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _lockId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ExtendLockupCall__Outputs {
  _call: ExtendLockupCall;

  constructor(call: ExtendLockupCall) {
    this._call = call;
  }
}

export class LockEtherCall extends ethereum.Call {
  get inputs(): LockEtherCall__Inputs {
    return new LockEtherCall__Inputs(this);
  }

  get outputs(): LockEtherCall__Outputs {
    return new LockEtherCall__Outputs(this);
  }
}

export class LockEtherCall__Inputs {
  _call: LockEtherCall;

  constructor(call: LockEtherCall) {
    this._call = call;
  }

  get _months(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _lockType(): number {
    return this._call.inputValues[2].value.toI32();
  }
}

export class LockEtherCall__Outputs {
  _call: LockEtherCall;

  constructor(call: LockEtherCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockEtherCall extends ethereum.Call {
  get inputs(): UnlockEtherCall__Inputs {
    return new UnlockEtherCall__Inputs(this);
  }

  get outputs(): UnlockEtherCall__Outputs {
    return new UnlockEtherCall__Outputs(this);
  }
}

export class UnlockEtherCall__Inputs {
  _call: UnlockEtherCall;

  constructor(call: UnlockEtherCall) {
    this._call = call;
  }

  get _lockId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnlockEtherCall__Outputs {
  _call: UnlockEtherCall;

  constructor(call: UnlockEtherCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
